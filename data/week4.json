{
  "questions": [
    {
      "question": "Why interoperability in IoT is an issue?",
      "options": [
        "IoT nodes are heterogeneous hence they communicate in different protocols",
        "IoT nodes are homogeneous and communicate with the same protocol",
        "IoT nodes do not communicate",
        "IoT nodes are small"
      ],
      "answer": "IoT nodes are heterogeneous hence they communicate in different protocols",
      "explanation": "Interoperability is a challenge because IoT systems combine diverse devices, sensors, and platforms from various manufacturers, each using different communication protocols and data formats. This heterogeneity makes seamless data exchange and integration difficult without standardized interfaces or middleware."
    },
    {
      "question": "UNSPSC provides a solution for which of the following?",
      "options": [
        "Manufacturing",
        "Supply Chain",
        "Classification",
        "Communication"
      ],
      "answer": "Classification",
      "explanation": "UNSPSC (United Nations Standard Products and Services Code) is a global, multi-sectoral classification system for products and services. It provides a standardized framework for categorizing items, which is essential for streamlining procurement, logistics, and supply chain management, not for direct manufacturing or communication."
    },
    {
      "question": "Arduino development boards are equipped with micro-controller processors which are ................... with respect to their hardware configurations.",
      "options": [
        "closed source",
        "open source",
        "forward source",
        "up sourced"
      ],
      "answer": "open source",
      "explanation": "Arduino boards are built on open-source hardware principles. Their schematics, design files, and software are publicly available, allowing anyone to study, modify, and distribute the hardware."
    },
    {
      "question": "Translation of inter-device communication forms an important part in solving device interoperability.",
      "options": [
        "True",
        "False"
      ],
      "answer": "True",
      "explanation": "Translation between different communication protocols and data formats is essential for enabling diverse IoT devices to understand and work with each other, directly addressing the core challenge of device interoperability."
    },
    {
      "question": "With respect to the different wireless communication protocols such as Zigbee, Bluetooth, GPRS, 6LoWPAN and WiFi, which of the following terms can be associated with?",
      "options": [
        "Homogeneity",
        "Heterogeneity",
        "Self Service",
        "All of the given"
      ],
      "answer": "Heterogeneity",
      "explanation": "The variety of different wireless communication protocols like Zigbee, Bluetooth, GPRS, 6LoWPAN, and WiFi exemplifies heterogeneity. This diversity in standards and technologies is a primary challenge for interoperability in IoT systems."
    },
    {
      "question": "Which among the following are valid Arduino datatypes?",
      "options": [
        "byte",
        "char",
        "Boolean",
        "All of the given"
      ],
      "answer": "All of the given",
      "explanation": "The Arduino programming language (based on C/C++) supports all these data types: byte (8-bit unsigned number), char (character), and boolean (true/false value)."
    },
    {
      "question": "What is the purpose of the delay() function in Arduino programming?",
      "options": [
        "To speed up the execution",
        "To terminate the program",
        "To reset all parameters",
        "To make the program go to sleep for a certain duration"
      ],
      "answer": "To make the program go to sleep for a certain duration",
      "explanation": "The delay() function pauses the program for a specified number of milliseconds, halting all operations temporarily. This allows for timing control, such as blinking an LED at a regular interval."
    },
    {
      "question": "Consider the following Arduino code snippet: String str = \"Hello World\"; String ptr = str.ToUpperCase(); What will be the value of String ptr?",
      "options": [
        "Hello World",
        "helloworld",
        "HELLOWORLD",
        "WORLDHELLO"
      ],
      "answer": "HELLOWORLD",
      "explanation": "The .ToUpperCase() function in Arduino converts all characters in the String to uppercase. Applying it to \"Hello World\" removes the space and capitalizes every letter, resulting in \"HELLOWORLD\"."
    },
    {
      "question": "What does the following code snippet do in interfacing a servo motor with the Arduino MEGA board? int servoPin = 12;",
      "options": [
        "Declares pin for connecting servo motor",
        "Declares pin for providing power to MEGA board",
        "Declares pin for Ground supply for servo motor",
        "None of these"
      ],
      "answer": "Declares pin for connecting servo motor",
      "explanation": "The code int servoPin = 12; declares an integer variable named servoPin and assigns it the value 12, which represents the digital pin number on the Arduino MEGA board where the control wire of the servo motor will be connected."
    },
    {
      "question": "State True or False. Statement: \"The \"Verify\" option in the Arduino IDE checks the code for compilation errors.\"",
      "options": [
        "True",
        "False"
      ],
      "answer": "True",
      "explanation": "The \"Verify\" button (checkmark icon) in the Arduino IDE compiles the code to check for syntax errors, missing libraries, or other issues that would prevent it from being successfully uploaded to the board. It does not upload the code, only checks for compilation errors."
    },
    {
      "question": "The tool used to select a particular COM port for connecting Arduino to a serial connector is called a sketch.",
      "options": [
        "True",
        "False"
      ],
      "answer": "False",
      "explanation": "A sketch is the name for an Arduino program, not a tool for selecting a COM port. The COM port is selected from the Tools > Port menu in the Arduino IDE."
    },
    {
      "question": "In general, with respect to any sensor that can be connected to an Arduino board, which of the following is correct?",
      "options": [
        "The sensor has infinite number of connecting pins",
        "The sensor will have at least 3 pins (1+Vcc, 1 GND and 1 Data pin)",
        "The sensor need not connect to the Arduino board",
        "The sensor will always have exactly 5 pins"
      ],
      "answer": "The sensor will have at least 3 pins (1+Vcc, 1 GND and 1 Data pin)",
      "explanation": "Most basic sensors require at least three connections: Vcc for power, GND for ground, and a Data pin to send the signal to the Arduino. Some sensors may have additional pins for functions like voltage reference or multiple data lines, but three is the common minimum."
    },
    {
      "question": "You connect the +Vcc PIN of a sensor with which of the corresponding PIN of Arduino board.",
      "options": [
        "3V",
        "GND",
        "PIN A5",
        "PIN CTX"
      ],
      "answer": "3V",
      "explanation": "The +Vcc (positive voltage supply) pin of a sensor is connected to a power output pin on the Arduino, such as 3.3V (3V) or 5V, depending on the sensor's voltage requirement. It is not connected to GND (ground) or a data pin like A5."
    },
    {
      "question": "Servo is a type of............",
      "options": [
        "Sensor",
        "Actuator",
        "Modifier",
        "Pacifier"
      ],
      "answer": "Actuator",
      "explanation": "A servo is an actuator that converts electrical signals into precise physical movement, such as controlling the position of a shaft or lever. It performs an action rather than sensing the environment."
    },
    {
      "question": "While uploading a sketch to an Arduino board, which of the following should be checked?",
      "options": [
        "Board",
        "Serial Port",
        "Both Board and Serial Port",
        "Neither Board nor Serial Port"
      ],
      "answer": "Both Board and Serial Port",
      "explanation": "Before uploading, you must select the correct Board (e.g., Arduino Uno) from the Tools > Board menu and the right Serial Port (e.g., COM3) from Tools > Port to ensure the IDE communicates with the proper device."
    }
  ]
}
